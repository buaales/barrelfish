device zynqmp_cni msbfirst ( addr base ) "communication network interface"
{
  register cs_gtime ro addr(base, 0x0) "c state global time" type(uint32);
  
  constants dmc "deferred mode change" {
    dmc_noreq	=   0b000    "no deferred mode change request";
    dmc_app1	=   0b001    "change to app mode 1";
    dmc_app2	=   0b010    "change to app mode 2";
  };
  constants cm "cluster mode" {
    cm_invalid	=   0b000   "invalid";
    cm_app1	=   0b001   "application mode 1";
    cm_app2	=   0b010   "application mode 2";
    cm_cs		=   0b111   "cold start mode";
  };
  register cs_mode ro addr(base, 0x4) "c state mode" {
	_		5	rsvd;
    dmc		3   type(dmc)	"deferred mode change";
	_		5	rsvd;
    cm      3   type(cm)	"cluster mode";
    _		6	rsvd;
    rsp     10   "round slot position";
  };

  register cs_mvec ro addr(base, 0x8) "c state membership vector" type(uint32);

  register clkcrr ro addr(base, 0xc) "clock status correction term" type(uint32);

  constants ps "protocol state" {
    ps_freeze	=   0b0000;
    ps_init	=   0b0001;
    ps_listen	=   0b0010;
    ps_cs		=   0b0011	"cold start";
	ps_active  =	0b0100;
	ps_passive	=	0b0101;
	ps_await	=	0b0110;
	ps_test	=	0b0111;
	ps_dl		=	0b1000	"download";
	ps_err		=	0b1001	"error";
  };

  register stat ro addr(base, 0x10) "status" {
    _		11	rsvd;
	ce		1	"clique error";
	se		1	"synchronization error";
	me		1	"membership error";
	cb		1	"communication system blackout";
	be		1	"bus guardian error";
	_		4	rsvd;
	so		1	"slot occupied error";
	mv		1	"mode violation error";
	nr		1	"frames not ready";
	cc		1	"concurrency control error";
	_		3	rsvd;
	mc		1	"medl crc error";
	ps		4	type(ps)	"protocol state";
  };

  register scdid ro addr(base, 0x14) "schedule id" type(uint32);

  register appid ro addr(base, 0x18) "application id" type(uint32);

  register lname ro addr(base, 0x1c) "logical name" {
    sp		16	"slot position";
	mid		16	"multiplexed id";
  };
  
  register clife ro addr(base, 0x20) "controller lifesign" type(uint32);

  register ctime ro addr(base, 0x24) "cluster time" type(uint32);

  register intstat rw addr(base, 0x28) "interrupt status" {
    _		15	rsvd;
	ti		1	"timer interrupt";
	_		5	rsvd;
	ui		1	"user interrupt";
	ml		1	"membership loss";
	cv		1	"c state valid";
	_		4	rsvd;
	cr		1	"controller ready";
	he		1	"host error";
	pe		1	"protocol error";
	br		1	"BIST(built in self test) error";
  };
  
  constants mcr "mode change request" {
    mcr_noreq	=	0b000	"no mode change request";
	mcr_req1	=	0b001	"set deferred mode change request field to req1";
	mcr_req2	=	0b010	"set deferred mode change request field to req2";
    mcr_reset	=   0b100   "clear deferred mode change request field";
  };

  
  register msg_stat ro addr(base, 0x2c) "message area status" {
	_		30	rsvd;
	rxen	1	"rx area accessable";
    txen	1	"tx area accessable";
  };

  register ctrl rw addr(base, 0x30) "control register" {
    _		23	rsvd;
	ten		1	"timer enable";
	_		1	rsvd;
	mcr		3	"mode change request";
	_		1	rsvd;
	bist	1	"built in self test";
	ca		1	"controller await";
    co		1	"controller on";
  };

  register hlife rw addr(base, 0x34) "host lifesign" type(uint32);

  register erct rw addr(base, 0x38) "externel rate correction term" type(uint32);

  constants	tm	"timer mode" {
    once	=	0b0;
	repeat	=	0b1;
  };
  register timer rw addr(base, 0x3c) "timer" {
    tm		1	type(tm)	"timer mode";
	value	31	"timer value in macrotick";
  };

  register inten rw addr(base, 0x40) "interrupt enable" {
	_		15	rsvd;
	tie		1	"timer interrupt enable";
	_		5	rsvd;
	uie		1	"user interrupt enable";
	mle		1	"membership loss enable";
	cve		1	"c state valid enable";
	_		4	rsvd;
	cre		1	"controller ready enable";
	hee		1	"host error enable";
	pee		1	"protocol error enable";
	bre		1	"BIST error enable";
  };

  register tocnt rw addr(base, 0x44) "timer overflow counter" type(uint32);

  register tstart rw addr(base, 0x48) "time startup" type(uint32);

};
